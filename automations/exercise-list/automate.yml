crosscompute: 0.9.3

name: Exercise Tool
description: Exercise Recommender
slug: exercise-recommender
version: 0.1.5

# imports configuration
# - path to the configuration file that you want to import (required)
# - id to use when referencing this import in your template
# imports:
#   - path: tools/automation-y/automate.yml
#     id: automation-y

# input configuration
input:
  variables:
    - id: patient_name
      view: string
      path: variables.dictionary
      configuration:
        label: Patient Name

    - id: health_professional_name
      view: string
      path: variables.dictionary
      configuration:
        label: Health Professional Name

    - id: diagnosis
      view: string
      path: variables.dictionary
      configuration:
        label: Diagnosis

    - id: affected_zone
      view: checkbox
      path: variables.dictionary
      configuration:
        label: Affected Zone
        options:
          - value: Neck
          - value: Hip
          - value: Obliques
          - value: Back
          - value: Lower Back

    - id: exercise_type
      view: checkbox
      path: variables.dictionary
      configuration:
        label: Exercise Type
        options:
          - value: Range of motion
          - value: Stretch
          - value: Strength
          - value: Activate Zone


    - id: severity
      view: checkbox
      path: variables.dictionary
      configuration:
        label: Exercise Type
        options:
          - value: Mild
          - value: Moderate
          - value: Severe
  # input templates
  # - path to your markdown template or jupyter notebook form (required)
  # templates:
  #   - path: form1.md
  #   - path: form2.md

# output configuration
output:

  # output variables
  # - id to use when referencing your variable in the template (required)
  # - view to use when rendering your variable on the display (required)
  # - path where your script saves the variable, relative to the output
  #   folder (required)
  # - configuration of the view
  variables:
    - id: exercises
      view: text
      path: exercises.json
  #     configuration:
  #       link-text: YOUR-LINK-TEXT
  #       file-name: YOUR-FILE-NAME
  #   - id: y2
  #     view: string
  #     path: variables.dictionary
  #   - id: y3
  #     view: number
  #     path: variables.dictionary
  #   - id: y4
  #     view: text
  #     path: y4.txt
  #   - id: y5
  #     view: markdown
  #     path: y5.md
  #   - id: y6
  #     view: image
  #     path: y6.svg
  #   - id: y7
  #     view: table
  #     path: y7.json
  #   - id: y8
  #     view: frame
  #     path: variables.dictionary
  #   - id: y9
  #     view: map-mapbox
  #     path: y9.geojson
  #     configuration:
  #       style: mapbox://styles/mapbox/dark-v10
  #       layers:
  #         - type: fill
  #           type: circle
  #           paint:
  #             fill-color: blue
  #             circle-color: red
  #   - id: y10
  #     view: map-deck-screengrid
  #     path: y10.json
  #     configuration:
  #       style: mapbox://styles/mapbox/dark-v10

  # output templates
  # - path to your markdown template or jupyter notebook form (required)
  templates:
     - path: select_exercise.md

# batches configuration
# - folder that contains an input subfolder with paths for
#   input variables; can include variable ids and filters (required)
# - name of the batch; can include variable ids and filters
# - slug for batch URI; can include variable ids and filters
# - reference batch to use to fill omitted variables in batch configuration
# - configuration for batch template
batches:

  # case 0: use a batch folder to set values for input variables
  - folder: batches/standard

  # case 1: use a batch configuration to vary values for input variables
  # - folder: batches/{x1 | slug}-{x2}
  #   name: '{x1 | title} {x2}'
  #   slug: '{x1 | slug}-{x2}'
  #   configuration:
  #     path: datasets/batches.csv

  # case 2: use a reference folder to set default values for missing variables
  #         use a batch configuration to vary selected variables
  # - folder: batches/{x1 | slug}-{x2}
  #   name: '{x1 | title} {x2}'
  #   slug: '{x1 | slug}-{x2}'
  #   reference:
  #     folder: batches/standard
  #   configuration:
  #     path: datasets/batches.csv

# datasets configuration
# - path of a dataset expected by your script
# - reference dataset if expected path does not exist
# datasets:
#   - path: datasets/abc.csv
#     reference:
#       path: datasets/abc-2022.csv

# scripts configuration
# - path to your script or notebook, relative to the script folder
# - command to run your script, if path is not specified
# - folder where your script should run
scripts:
  - path: run.ipynb
#   - path: run2.py
#     folder: scripts
#   - path: run3.ipynb
#   - command: python run4.py {input_folder} {output_folder}
#   - command: >
#       python run5.py
#       {input_folder} {output_folder} {log_folder} {debug_folder}

# environment configuration
environment:

  # engine to use to run your script
  # engine: podman

  # image to use to initialize your container
  # image: python

  # packages needed by your scripts
  packages:
    - id: cogdb
      manager: pip

  # ports needed by your scripts
  # ports:
  #   - id: session_url
  #     number: 8888

  # environment variables needed by your scripts
  # - id of the environment variable to make available to your script (required)
  # variables:
  #   - id: GOOGLE_KEY

  # batch concurrency, either process, thread or single
  # batch: process

  # interval to wait before running your scripts again
  # interval: 30 minutes

# display configuration
display:

  # styles configuration
  # - path to CSS stylesheet that will be used to render your templates
  # - uri to CSS stylesheet that will be used to render your templates
  styles:
    - path: style.css
    - uri: https://fonts.googleapis.com/css?family=Tangerine

  # templates configuration
  # - path to template (required)
  # - id of template
  # templates:
  #   - path: base.jinja2
  #     id: base
  #   - path: live.jinja2
  #     id: live
  #  - path: root.jinja2
  #    id: root

  # pages configuration
  # - id of the page (required)
  # - configuration of the page
  pages:
    - id: output
      configuration:
        design: none
  #   - id: input
  #     configuration:
  #       design: flex-vertical
  #   - id: output
  #     configuration:
  #       design: none

# authorization configuration
# authorization:
#   tokens:
#     - path: tokens.yml
#   groups:
#     - configuration:
#         role_name: admin
#       permissions:
#         - id: add_token
#         - id: see_root
#         - id: see_automation
#         - id: see_batch
#         - id: run_automation
#     - configuration:
#         role_name:
#           - leader
#           - member
#       permissions:
#         - id: see_root
#         - id: see_automation
#         - id: see_batch
#           action: match

# prints configuration
prints:
  - format: pdf
    configuration:
#       header-footer:
#         font-family: sans-serif
#         font-size: 8pt
#         color: '#808080'
#         padding: 0.1in 0.25in
#         skip-first: true
      page-number:
        location: footer
        alignment: right
#     folder: ~/Documents/attachments/automation-x-{timestamp}
#     name: '{y2 | slug}-{y3}.pdf'
